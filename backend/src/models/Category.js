// MODELO DE CATEGORIA
// Define as categorias dos v√≠deos gospel (prega√ß√£o, m√∫sica, testemunho, etc)

const { DataTypes } = require('sequelize');
const { sequelize } = require('../config/database');

const Category = sequelize.define('Category', {
  id: {
    type: DataTypes.INTEGER,        // ID num√©rico simples
    primaryKey: true,
    autoIncrement: true
  },
  
  // === DADOS DA CATEGORIA ===
  name: {
    type: DataTypes.STRING(50),     // Nome da categoria
    allowNull: false,               // Obrigat√≥rio
    unique: true,                   // Nome √∫nico
    validate: {
      len: [2, 50]                  // Entre 2 e 50 caracteres
    }
  },
  
  slug: {
    type: DataTypes.STRING(50),     // Nome para URL (pregacao, musica, etc)
    allowNull: false,               // Obrigat√≥rio
    unique: true,                   // √önico no sistema
    validate: {
      is: /^[a-z0-9-]+$/            // S√≥ letras min√∫sculas, n√∫meros e h√≠fen
    }
  },
  
  description: {
    type: DataTypes.TEXT,           // Descri√ß√£o da categoria
    allowNull: true,                // Opcional
    validate: {
      len: [0, 500]                 // M√°ximo 500 caracteres
    }
  },
  
  // === VISUAL ===
  icon: {
    type: DataTypes.STRING(50),     // Emoji ou √≠cone da categoria
    allowNull: true,                // Opcional
    defaultValue: 'üì∫'              // √çcone padr√£o
  },
  
  color: {
    type: DataTypes.STRING(7),      // Cor hex da categoria (#FF5733)
    allowNull: true,                // Opcional
    defaultValue: '#4A90E2',        // Azul padr√£o do Santoo
    validate: {
      is: /^#[0-9A-Fa-f]{6}$/       // Formato hex v√°lido
    }
  },
  
  // === CONFIGURA√á√ïES ===
  isActive: {
    type: DataTypes.BOOLEAN,        // Categoria ativa?
    defaultValue: true
  },
  
  order: {
    type: DataTypes.INTEGER,        // Ordem de exibi√ß√£o
    defaultValue: 0,
    validate: { min: 0 }
  },
  
  // === ESTAT√çSTICAS ===
  videosCount: {
    type: DataTypes.INTEGER,        // N√∫mero de v√≠deos nesta categoria
    defaultValue: 0,
    validate: { min: 0 }
  }
  
}, {
  // === CONFIGURA√á√ïES DA TABELA ===
  tableName: 'categories',          // Nome da tabela no banco
  timestamps: true,                 // Adiciona createdAt e updatedAt
  
  // === √çNDICES ===
  indexes: [
    {
      fields: ['slug']              // √çndice para busca r√°pida por slug
    },
    {
      fields: ['isActive', 'order'] // √çndice para listagem ordenada
    }
  ]
});

// === M√âTODO PARA CRIAR CATEGORIAS PADR√ÉO ===
Category.createDefaultCategories = async function() {
  const defaultCategories = [
    {
      name: 'Prega√ß√£o',
      slug: 'pregacao',
      description: 'Mensagens, serm√µes e ensinamentos b√≠blicos',
      icon: '‚õ™',
      color: '#8B4513',
      order: 1
    },
    {
      name: 'M√∫sica',
      slug: 'musica', 
      description: 'M√∫sicas gospel, louvores e adora√ß√£o',
      icon: 'üéµ',
      color: '#FF6B6B',
      order: 2
    },
    {
      name: 'Testemunho',
      slug: 'testemunho',
      description: 'Testemunhos de vida e transforma√ß√£o',
      icon: 'üôè',
      color: '#4ECDC4',
      order: 3
    },
    {
      name: 'Estudo B√≠blico',
      slug: 'estudo-biblico',
      description: 'Estudos aprofundados da Palavra de Deus',
      icon: 'üìñ',
      color: '#45B7D1',
      order: 4
    },
    {
      name: 'Jovens',
      slug: 'jovens',
      description: 'Conte√∫do direcionado para jovens crist√£os',
      icon: 'üåü',
      color: '#96CEB4',
      order: 5
    },
    {
      name: 'Infantil',
      slug: 'infantil',
      description: 'Conte√∫do educativo para crian√ßas',
      icon: 'üë∂',
      color: '#FECA57',
      order: 6
    },
    {
      name: 'Live',
      slug: 'live',
      description: 'Transmiss√µes ao vivo e cultos online',
      icon: 'üî¥',
      color: '#FF5733',
      order: 7
    },
    {
      name: 'Devocional',
      slug: 'devocional',
      description: 'Reflex√µes di√°rias e momentos de ora√ß√£o',
      icon: 'üïäÔ∏è',
      color: '#A8E6CF',
      order: 8
    }
  ];
  
  // Cria categorias que n√£o existem
  for (const categoryData of defaultCategories) {
    await Category.findOrCreate({
      where: { slug: categoryData.slug },
      defaults: categoryData
    });
  }
  
  console.log('‚úÖ Categorias padr√£o criadas/verificadas!');
};

module.exports = Category;
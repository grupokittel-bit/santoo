// SCRIPT DE DADOS DE EXEMPLO (SEEDS)
// Popula o banco com dados de teste para desenvolvimento

const { User, Category, Video, Comment, Like, Follow } = require('../models');

// Importa seeds da B√≠blia Explicada
const { seedBiblePosts } = require('./seedBiblePosts');

// === DADOS DE EXEMPLO ===

const sampleUsers = [
  {
    username: 'pastorjoao',
    email: 'joao@igrejanova.com.br',
    password: '123456789',
    displayName: 'Pastor Jo√£o Silva',
    bio: 'Pastor h√° 15 anos, servo de Deus e pregador da palavra.',
    location: 'S√£o Paulo, SP',
    website: 'https://igrejanova.com.br',
    isVerified: true,
    role: 'pastor'
  },
  {
    username: 'mariacantora',
    email: 'maria@gospel.com',
    password: '123456789', 
    displayName: 'Maria Santos',
    bio: 'Cantora gospel, ministrando atrav√©s da m√∫sica h√° 10 anos.',
    location: 'Rio de Janeiro, RJ',
    isVerified: true,
    role: 'user'
  },
  {
    username: 'jovemcristao',
    email: 'pedro@email.com',
    password: '123456789',
    displayName: 'Pedro Jovem',
    bio: 'L√≠der de jovens, apaixonado por Jesus e pela juventude.',
    location: 'Belo Horizonte, MG',
    isVerified: false,
    role: 'user'
  },
  {
    username: 'anaestudos',
    email: 'ana@estudos.com',
    password: '123456789',
    displayName: 'Ana Estudiosa',
    bio: 'Professora da EBD, amo ensinar a palavra de Deus.',
    location: 'Salvador, BA',
    isVerified: true,
    role: 'user'
  },
  {
    username: 'carlosadm',
    email: 'carlos@santoo.app',
    password: '123456789',
    displayName: 'Carlos Admin',
    bio: 'Administrador da plataforma Santoo.',
    location: 'Bras√≠lia, DF',
    isVerified: true,
    role: 'admin'
  }
];

const sampleVideos = [
  {
    title: 'A Import√¢ncia da Ora√ß√£o na Vida do Crist√£o',
    description: 'Uma mensagem poderosa sobre como a ora√ß√£o transforma nossas vidas e nos aproxima de Deus. Baseada em 1 Tessalonicenses 5:17 - "Orai sem cessar".',
    tags: 'ora√ß√£o, vida crist√£, crescimento espiritual, prega√ß√£o',
    categoryId: 1, // Prega√ß√£o
    userIndex: 0, // pastorjoao
    duration: 2400, // 40 minutos
    viewsCount: 1543,
    likesCount: 234,
    commentsCount: 45
  },
  {
    title: 'Louvores que Transformam o Cora√ß√£o',
    description: 'Uma sele√ß√£o dos melhores louvores para momentos de adora√ß√£o e intimidade com Deus. M√∫sica que toca a alma.',
    tags: 'louvor, adora√ß√£o, m√∫sica gospel, ministra√ß√£o',
    categoryId: 2, // M√∫sica
    userIndex: 1, // mariacantora
    duration: 1800, // 30 minutos
    viewsCount: 3421,
    likesCount: 567,
    commentsCount: 89
  },
  {
    title: 'Como Deus Mudou Minha Vida Completamente',
    description: 'Compartilho aqui como Jesus transformou minha hist√≥ria de drogas e depress√£o em vit√≥ria e prop√≥sito. Gloria a Deus!',
    tags: 'testemunho, transforma√ß√£o, liberdade, Jesus',
    categoryId: 3, // Testemunho
    userIndex: 2, // jovemcristao
    duration: 900, // 15 minutos
    viewsCount: 2156,
    likesCount: 412,
    commentsCount: 78
  },
  {
    title: 'Estudo sobre o Fruto do Esp√≠rito - Parte 1',
    description: 'Primeira parte do nosso estudo sobre G√°latas 5:22-23. Hoje falamos sobre amor, alegria e paz.',
    tags: 'estudo b√≠blico, fruto do esp√≠rito, g√°latas, crescimento',
    categoryId: 4, // Estudo B√≠blico
    userIndex: 3, // anaestudos
    duration: 3600, // 1 hora
    viewsCount: 987,
    likesCount: 156,
    commentsCount: 34
  },
  {
    title: 'Acampamento de Jovens 2025 - Highlights',
    description: 'Os melhores momentos do nosso acampamento de jovens! Foram dias incr√≠veis de comunh√£o e crescimento espiritual.',
    tags: 'jovens, acampamento, comunh√£o, divers√£o crist√£',
    categoryId: 5, // Jovens
    userIndex: 2, // jovemcristao
    duration: 1200, // 20 minutos
    viewsCount: 1876,
    likesCount: 298,
    commentsCount: 67
  },
  {
    title: 'Hist√≥rias B√≠blicas para Crian√ßas - No√©',
    description: 'A hist√≥ria de No√© e a arca contada de forma divertida e educativa para os pequenos.',
    tags: 'infantil, hist√≥rias b√≠blicas, no√©, educa√ß√£o crist√£',
    categoryId: 6, // Infantil
    userIndex: 3, // anaestudos
    duration: 600, // 10 minutos
    viewsCount: 2543,
    likesCount: 445,
    commentsCount: 23
  },
  {
    title: 'Culto ao Vivo - Igreja Nova Dimens√£o',
    description: 'Transmiss√£o ao vivo do culto dominical da Igreja Nova Dimens√£o. Uma noite de avivamento!',
    tags: 'live, culto ao vivo, igreja, avivamento',
    categoryId: 7, // Live
    userIndex: 0, // pastorjoao
    duration: 5400, // 1h30min
    viewsCount: 4321,
    likesCount: 623,
    commentsCount: 156
  },
  {
    title: 'Reflex√£o Matinal - Salmo 23',
    description: 'Uma reflex√£o suave sobre o Salmo 23 para come√ßar o dia com Deus. "O Senhor √© meu pastor..."',
    tags: 'devocional, salmo 23, manh√£, reflex√£o',
    categoryId: 8, // Devocional
    userIndex: 3, // anaestudos
    duration: 300, // 5 minutos
    viewsCount: 1234,
    likesCount: 189,
    commentsCount: 12
  }
];

const sampleComments = [
  {
    videoIndex: 0,
    userIndex: 1,
    content: 'Que mensagem aben√ßoada, Pastor Jo√£o! Deus continue usando sua vida poderosamente!'
  },
  {
    videoIndex: 0,
    userIndex: 2,
    content: 'Am√©m! Essa palavra tocou meu cora√ß√£o. Vou aplicar na minha vida.'
  },
  {
    videoIndex: 1,
    userIndex: 0,
    content: 'Maria, sua voz √© um instrumento de Deus! Que louvor ungido!'
  },
  {
    videoIndex: 1,
    userIndex: 3,
    content: 'Chorei de emo√ß√£o ouvindo. Deus falou comigo atrav√©s dessa m√∫sica.'
  },
  {
    videoIndex: 2,
    userIndex: 0,
    content: 'Que testemunho poderoso, Pedro! Deus √© fiel e transforma vidas!'
  },
  {
    videoIndex: 2,
    userIndex: 1,
    content: 'Gloria a Deus pela sua vida! Voc√™ √© uma inspira√ß√£o para todos n√≥s.'
  },
  {
    videoIndex: 3,
    userIndex: 2,
    content: 'Professora Ana, seus estudos s√£o sempre muito edificantes! Parab√©ns!'
  },
  {
    videoIndex: 4,
    userIndex: 0,
    content: 'Que b√™n√ß√£o ver os jovens buscando a Deus! Continuem assim!'
  }
];

// === FUN√á√ïES DE CRIA√á√ÉO ===

async function createUsers() {
  console.log('üë• Criando usu√°rios de exemplo...');
  
  const users = [];
  
  for (let i = 0; i < sampleUsers.length; i++) {
    const userData = sampleUsers[i];
    
    try {
      // Verifica se usu√°rio j√° existe
      const existingUser = await User.findOne({
        where: { username: userData.username }
      });
      
      if (existingUser) {
        console.log(`   ‚ö†Ô∏è  Usu√°rio ${userData.username} j√° existe`);
        users.push(existingUser);
        continue;
      }
      
      const user = await User.create(userData);
      users.push(user);
      console.log(`   ‚úÖ Criado: ${userData.username} (${userData.displayName})`);
      
    } catch (error) {
      console.error(`   ‚ùå Erro ao criar ${userData.username}:`, error.message);
    }
  }
  
  console.log(`\nüìä Total de usu√°rios: ${users.length}\n`);
  return users;
}

async function createVideos(users) {
  console.log('üé• Criando v√≠deos de exemplo...');
  
  const videos = [];
  
  for (let i = 0; i < sampleVideos.length; i++) {
    const videoData = sampleVideos[i];
    const user = users[videoData.userIndex];
    
    if (!user) {
      console.log(`   ‚ö†Ô∏è  Usu√°rio n√£o encontrado para v√≠deo: ${videoData.title}`);
      continue;
    }
    
    try {
      const video = await Video.create({
        ...videoData,
        userId: user.id,
        videoUrl: `/uploads/videos/sample-video-${i + 1}.mp4`,
        thumbnailUrl: `/uploads/thumbnails/sample-thumb-${i + 1}.jpg`,
        fileName: `sample-video-${i + 1}.mp4`,
        filePath: `src/uploads/videos/sample-video-${i + 1}.mp4`,
        fileSize: Math.floor(Math.random() * 50000000) + 10000000, // Entre 10-60MB
        slug: videoData.title.toLowerCase()
          .replace(/[^\w\s]/gi, '')
          .replace(/\s+/g, '-')
          .substring(0, 50)
      });
      
      videos.push(video);
      
      // Atualiza contador do usu√°rio
      await user.increment('videosCount');
      
      console.log(`   ‚úÖ Criado: ${videoData.title.substring(0, 40)}...`);
      
    } catch (error) {
      console.error(`   ‚ùå Erro ao criar v√≠deo ${videoData.title}:`, error.message);
    }
  }
  
  console.log(`\nüìä Total de v√≠deos: ${videos.length}\n`);
  return videos;
}

async function createComments(users, videos) {
  console.log('üí¨ Criando coment√°rios de exemplo...');
  
  let commentsCreated = 0;
  
  for (let i = 0; i < sampleComments.length; i++) {
    const commentData = sampleComments[i];
    const user = users[commentData.userIndex];
    const video = videos[commentData.videoIndex];
    
    if (!user || !video) {
      console.log(`   ‚ö†Ô∏è  Usu√°rio ou v√≠deo n√£o encontrado para coment√°rio ${i + 1}`);
      continue;
    }
    
    try {
      await Comment.create({
        content: commentData.content,
        userId: user.id,
        videoId: video.id
      });
      
      // Atualiza contador no v√≠deo
      await video.increment('commentsCount');
      
      commentsCreated++;
      console.log(`   ‚úÖ Coment√°rio ${i + 1} criado`);
      
    } catch (error) {
      console.error(`   ‚ùå Erro ao criar coment√°rio ${i + 1}:`, error.message);
    }
  }
  
  console.log(`\nüìä Total de coment√°rios: ${commentsCreated}\n`);
}

async function createFollowsAndLikes(users, videos) {
  console.log('‚ù§Ô∏è Criando curtidas e seguidores...');
  
  let likesCreated = 0;
  let followsCreated = 0;
  
  // Cria algumas curtidas aleat√≥rias
  for (let i = 0; i < users.length; i++) {
    const user = users[i];
    
    // Cada usu√°rio curte alguns v√≠deos aleat√≥rios
    const videosToLike = videos.slice().sort(() => 0.5 - Math.random()).slice(0, 3);
    
    for (const video of videosToLike) {
      try {
        // N√£o curte pr√≥prio v√≠deo
        if (video.userId === user.id) continue;
        
        await Like.create({
          userId: user.id,
          videoId: video.id
        });
        
        await video.increment('likesCount');
        likesCreated++;
        
      } catch (error) {
        // Pode dar erro se j√° existir (constraint unique)
      }
    }
  }
  
  // Cria alguns follows
  for (let i = 0; i < users.length; i++) {
    const follower = users[i];
    
    // Cada usu√°rio segue alguns outros aleat√≥rios
    const usersToFollow = users
      .filter(u => u.id !== follower.id) // N√£o segue a si mesmo
      .slice().sort(() => 0.5 - Math.random()).slice(0, 2);
    
    for (const following of usersToFollow) {
      try {
        await Follow.create({
          followerId: follower.id,
          followingId: following.id
        });
        
        await follower.increment('followingCount');
        await following.increment('followersCount');
        followsCreated++;
        
      } catch (error) {
        // Pode dar erro se j√° existir
      }
    }
  }
  
  console.log(`   ‚úÖ ${likesCreated} curtidas criadas`);
  console.log(`   ‚úÖ ${followsCreated} seguidores criados\n`);
}

// === FUN√á√ÉO PRINCIPAL ===

async function seedDatabase() {
  console.log('\nüå± INICIANDO SEED DO BANCO SANTOO...\n');
  
  try {
    // 1. Cria usu√°rios
    const users = await createUsers();
    
    // 2. Cria v√≠deos
    const videos = await createVideos(users);
    
    // 3. Cria coment√°rios
    await createComments(users, videos);
    
    // 4. Cria curtidas e seguidores
    await createFollowsAndLikes(users, videos);
    
    // 5. Cria posts da B√≠blia Explicada
    console.log('üìñ Executando seed da B√≠blia Explicada...\n');
    await seedBiblePosts();
    
    console.log('üéä SEED COMPLETO CONCLU√çDO COM SUCESSO!\n');
    console.log('üìã RESUMO COMPLETO:');
    console.log(`   üë• ${users.length} usu√°rios`);
    console.log(`   üé• ${videos.length} v√≠deos`);
    console.log(`   üìñ 15 posts da B√≠blia Explicada`);
    console.log(`   üìÇ 8 categorias (j√° existentes)`);
    console.log(`   üí¨ ${sampleComments.length} coment√°rios`);
    console.log(`   ‚ù§Ô∏è Curtidas e seguidores distribu√≠dos`);
    
    console.log('\nüîë USU√ÅRIOS DE TESTE:');
    console.log('   pastorjoao / 123456789 (Pastor)');
    console.log('   mariacantora / 123456789 (Cantora)');
    console.log('   jovemcristao / 123456789 (Jovem)');
    console.log('   anaestudos / 123456789 (Professora)');
    console.log('   carlosadm / 123456789 (Admin)');
    
    console.log('\nüöÄ PR√ìXIMOS PASSOS:');
    console.log('   1. Execute: npm run dev');
    console.log('   2. Teste: http://localhost:3001/api/videos');
    console.log('   3. Fa√ßa login com qualquer usu√°rio acima');
    console.log('   4. Explore a API com dados reais!\n');
    
  } catch (error) {
    console.error('üí• ERRO CR√çTICO no seed:', error);
    process.exit(1);
  }
}

// === FUN√á√ÉO DE LIMPEZA (OPCIONAL) ===

async function clearDatabase() {
  console.log('üóëÔ∏è LIMPANDO BANCO DE DADOS...\n');
  
  try {
    await Comment.destroy({ where: {} });
    console.log('   ‚úÖ Coment√°rios removidos');
    
    await Like.destroy({ where: {} });
    console.log('   ‚úÖ Curtidas removidas');
    
    await Follow.destroy({ where: {} });
    console.log('   ‚úÖ Seguidores removidos');
    
    await Video.destroy({ where: {} });
    console.log('   ‚úÖ V√≠deos removidos');
    
    await User.destroy({ where: {} });
    console.log('   ‚úÖ Usu√°rios removidos');
    
    console.log('\nüßπ BANCO LIMPO COM SUCESSO!\n');
    
  } catch (error) {
    console.error('üí• ERRO ao limpar banco:', error);
  }
}

// === EXECU√á√ÉO ===

const args = process.argv.slice(2);

if (args.includes('--clear') || args.includes('-c')) {
  clearDatabase().then(() => process.exit(0));
} else {
  seedDatabase().then(() => process.exit(0));
}

module.exports = {
  seedDatabase,
  clearDatabase,
  sampleUsers,
  sampleVideos,
  sampleComments
};